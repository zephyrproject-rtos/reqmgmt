[DOCUMENT]
TITLE: Zephyr Stakeholder Needs
REQ_PREFIX: ZEP-

[GRAMMAR]
ELEMENTS:
- TAG: STAKEHOLDER_NEED
  FIELDS:
  - TITLE: UID
    TYPE: String
    REQUIRED: False
  - TITLE: STATUS
    TYPE: String
    REQUIRED: False
  - TITLE: TYPE
    TYPE: String
    REQUIRED: False
  - TITLE: TITLE
    TYPE: String
    REQUIRED: False
  - TITLE: STATEMENT
    TYPE: String
    REQUIRED: False
  RELATIONS:
  - TYPE: Parent
  - TYPE: File

[FREETEXT]
TBD
[/FREETEXT]

[STAKEHOLDER_NEED]
UID: ZEP-127
STATUS: Draft
TYPE: Need
TITLE: Architecture Layer Interface
STATEMENT: >>>
As a Zephyr RTOS user I want to be able to easily switch my application to a different MCU architecture (x86, ARM Cortex-M/A, RISCV etc.).
<<<

[STAKEHOLDER_NEED]
UID: ZEP-128
STATUS: Draft
TYPE: Need
TITLE: Support multiprocessor management
STATEMENT: >>>
As a Zephyr RTOS user I want to use Zephyr OS on multi core (SMP-)MCUs/MPUs.
<<<

[STAKEHOLDER_NEED]
UID: ZEP-129
STATUS: Draft
TYPE: Need
TITLE: Support Subset of Standard C Library
STATEMENT: >>>
As a Zephyr RTOS user I want to have a selection of standard C library implementations e.g. a full extend and a minimal with a smaller footprint or a particular fast executing implementation.
<<<

[STAKEHOLDER_NEED]
UID: ZEP-130
STATUS: Draft
TYPE: Need
TITLE: Device Driver Abstraction
STATEMENT: >>>
As a Zephyr RTOS user I want my application to be portable between different MCU architectures (ARM Cortex-M/A, Intel x86, RISCV etc.) and MCU vendors (STM, NXP, Intel, etc.) without having to change the MCU peripherals access.
<<<

[STAKEHOLDER_NEED]
UID: ZEP-131
STATUS: Draft
TYPE: Need
TITLE: Fatal error and exception handling
STATEMENT: >>>
As a Zephyr RTOS user I want errors and exceptions to handled and react according to my applications requirements (e.g. reach/establish the applications safety state).
<<<
